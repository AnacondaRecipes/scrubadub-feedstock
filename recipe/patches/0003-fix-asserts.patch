From 102e53cdf5beaf432f2305d86688133b6f975722 Mon Sep 17 00:00:00 2001
From: Andrii Osipov <aosipov@anaconda.com>
Date: Fri, 31 Jan 2025 15:39:44 -0800
Subject: [PATCH] fix asserts

---
 tests/test_detector_postal_codes.py | 10 +++++-----
 tests/test_exceptions.py            |  6 +++---
 2 files changed, 8 insertions(+), 8 deletions(-)

diff --git a/tests/test_detector_postal_codes.py b/tests/test_detector_postal_codes.py
index 43a19b0..23bd64c 100644
--- a/tests/test_detector_postal_codes.py
+++ b/tests/test_detector_postal_codes.py
@@ -57,10 +57,10 @@ class PostalCodesTestCase(unittest.TestCase):
         for postal_code, result in to_test:
             matches = list(detector.iter_filth(test_str.format(postal_code)))
             if result:
-                self.assertEquals(len(matches), 1)
-                self.assertEquals(matches[0].text, postal_code)
+                self.assertEqual(len(matches), 1)
+                self.assertEqual(matches[0].text, postal_code)
             else:
-                self.assertEquals(matches, [])
+                self.assertEqual(matches, [])
 
     def test_extensive(self):
         zip_location = pathlib.Path(__file__).parent / 'code_point_uk_post_codes.zip'
@@ -87,5 +87,5 @@ class PostalCodesTestCase(unittest.TestCase):
                     for post_code in post_codes:
                         filth_list = list(detector.iter_filth(post_code))
                         error_message = "Unable to match postcode {} from {}".format(post_code, data_file_name)
-                        self.assertEquals(1, len(filth_list), error_message)
-                        self.assertEquals(post_code, filth_list[0].text)
+                        self.assertEqual(1, len(filth_list), error_message)
+                        self.assertEqual(post_code, filth_list[0].text)
diff --git a/tests/test_exceptions.py b/tests/test_exceptions.py
index 29f5c70..2ab7293 100644
--- a/tests/test_exceptions.py
+++ b/tests/test_exceptions.py
@@ -8,6 +8,6 @@ class ExceptionsTestCase(unittest.TestCase):
         exception = exceptions.ScrubadubException()
         exception.var = 'there'
 
-        self.assertEquals(exception.render('test'), 'test')
-        self.assertEquals(exception.render('url %(issues_url)s'), 'url ' + exception.issues_url)
-        self.assertEquals(exception.render('hello %(var)s'), 'hello there')
+        self.assertEqual(exception.render('test'), 'test')
+        self.assertEqual(exception.render('url %(issues_url)s'), 'url ' + exception.issues_url)
+        self.assertEqual(exception.render('hello %(var)s'), 'hello there')
-- 
2.39.3 (Apple Git-146)

